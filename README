bluray_info - a set of utilities for accessing Blu-ray discs

Includes:

* bluray_info - display information about a Blu-ray in multiple formats
* bluray_copy - copy a title or playlist to a file or stdout

Requirements:

* libbluray >= 1.0.0 (libaacs needed for decryption)

Disc access:

Decrypting Blu-ray discs is done through libaacs, which libbluray is built with
or without support for. Even with libaacs, you will need a KEYDB.cfg file to
bypass the encryption, and can be found various places online. I keep a copy of
the one I'm using at http://bluray.beandog.org/keydb/

libaacs by default will look for KEYDB.cfg in ~/.config/aacs/ but with these
utilities, you can specify the path directly if you'd like.

Disc drives:

The drive I use is a LITE-ON iHOS104 (firmware version WL0D) that I bought many
years ago. It has the added bonus of being region-free for DVDs as well. :)

Sources:

The source can be either a device name, a single file, or a directory. The
program will the default blu-ray drive if no path is given.

  $ bluray_info
  $ bluray_info /dev/sr0
  $ bluray_info ~/Media/BD.ADVENTURE.iso
  $ bluray_info ~/Media/BD.ADVENTURE/
  $ bluray_info /mnt/bluray

If you're going to do a lot of reads on a disc drive, I'd recommend mounting it
so the access can be cached -- this is especially helpful when using / testing
bluray_copy a lot to get chapters, titles, playlists, etc.

  # mount /dev/sr0 -o ro -t udf /mnt/bluray

Depending on your luck / region / disc drive / disc / local alien invasion, you
may or may not be able to make an ISO directly from a disc.

If you want to give it a whirl, I recommend ddrescue:

  $ ddrescue -b 2048 -n /dev/sr0 bluray.iso ddrescue.log

Playlists and titles:

Blu-rays have "tracks" as well as "playlists," and they are not the same thing,
and do not share an identical numbered index.

For the most part, you will probably be fine ripping either one. I've heard
stories of some movie studios "stitching" playlists together to form a feature,
but I haven't encountered one (if you do, please let me know, I'm curious how
they are set up).

bluray_info:

Usage: bluray_info [options] [bluray device]

See buray_info --help for all options.

bluray_info syntax and output was designed to closely resemble the awesome
program "lsdvd" (and later my own clone and other programs, from dvd_info).

It will display as much relevant information I can get from the disc that is
provided by libbluray. Sadly, there's no way to display the number of channels
for each audio stream right now, and so it will simply display the codec as
Dolby Digital (ac3), DTS, etc. Maybe someday. It'll probably require me to
examine the content of the stream, which would mean using multimedia libraries.

bluray_copy:

Usage: bluray_copy [options] [bluray device]

See buray_copy --help for all options.

Blu-rays can store many codecs, and its container is an MPEG-2 transport stream.
If you so desire, you can easily remux it into another container -- and get the
file much smaller by dropping audio tracks you don't want or need. I recommend
using mkvmerge (from mkvtoolnix) or ffmpeg or avconv (libav).

Two examples of remuxing the copied stream with only the first audio track:

  $ mkvmerge -o bluray.mkv -a 1 bluray.m2ts
  $ ffmpeg -i bluray.m2ts -map 0:0 -map 0:1 -codec copy bluray.mkv

Or you can use bluray_copy to output to stdout and remux on the fly:

  $ bluray_copy -o - | ffmpeg -i - -map 0:0 -map 0:1 -codec copy bluray.mkv
  $ bluray_copy -o - | ffmpeg -i - -map 0:0 -map 0:1 -codec copy -f mpegts bluray.m2ts

Blu-rays can hold a lot of stuff ... a lot. bluray_copy won't do anything
fancy like check to see if you have enough space to copy the track you want to,
so be careful. It will simply quit if it can't write to the hard drive anymore.

If no argument is given, bluray_copy will simply select the longest track.

Support:

I love hunting down anomalies, so if you run into something odd on a disc, let
me know and I'd love to look into it. Bug reports are good, too.

If you want to say thanks, buy me a Blu-ray disc :D There's nothing I'd love
more than a new disc to play with (and something to watch as well).
Here's my Amazon wishlist: http://a.co/ik9j9Fw if you're feeling generous!

For this project, the code is at github - https://github.com/beandog/bluray_info
However, I run releases through SourceForge - http://bluray-info.sf.net/

If you have questions, feel free to contact me at steve.dibb@gmail.com

Also, check out more information at http://dvds.beandog.org/

Copyright:

Licensed under GPL-2. See https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt
